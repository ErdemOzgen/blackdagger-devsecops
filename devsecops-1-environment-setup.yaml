steps:
  - name: Install Docker
    command: bash
    script: |
      if ! command -v docker &> /dev/null
      then
          echo "Docker not found, installing..."

          # Add Docker's official GPG key and repository
          sudo apt-get update -y
          sudo apt-get install ca-certificates curl gnupg -y
          sudo install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          sudo chmod a+r /etc/apt/keyrings/docker.gpg

          # Add the repository to Apt sources
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
            $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

          sudo apt-get update -y
          sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y
          sudo groupadd docker
          sudo usermod -aG docker $USER
          sudo apt install gcc -y && sudo apt install build-essential -y
          sudo apt install docker-compose -y

          echo "Docker installation complete."
      else
          echo "Docker is already installed."
      fi

  - name: Install Java and Maven
    command: bash
    script: |
      if ! java -version 2>&1 | grep -q "openjdk version \"17"
      then
          echo "Installing OpenJDK 17 JDK and JRE..."
          sudo apt install openjdk-17-jdk openjdk-17-jre -y
          sudo apt install maven -y
      else
          echo "OpenJDK 17 JDK and JRE are already installed."
      fi
    depends:
    - Install Docker

  - name: Install Node.js and NPM
    command: bash
    script: |
      if ! command -v node > /dev/null 2>&1
      then
          echo "Setting up Node.js..."
          sudo apt-get update
          sudo apt-get install -y ca-certificates curl gnupg
          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
          # Replace '20' with the version number you wish to install, e.g., '14' for Node.js 14
          NODE_MAJOR=20
          echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main" | sudo tee /etc/apt/sources.list.d/nodesource.list
          sudo apt-get update
          source ~/.bashrc
          sudo apt install -y nodejs
      else
          echo "Node.js is already installed."
      fi
    depends:
    - Install Java and Maven

  - name: Install Ruby and RubyGems
    command: bash
    script: |
      if ! command -v ruby &> /dev/null
      then
          echo "Installing Ruby and RubyGems..."
          sudo apt-get install ruby-full rubygems -y
      else
          echo "Ruby and RubyGems are already installed."
      fi
    depends:
    - Install Node.js and NPM

  - name: Install Go
    command: bash
    script: |
      if ! command -v go &> /dev/null
      then
          echo "Go not found, installing..."
          
          # URL of the Go binary
          GO_BINARY_URL="https://go.dev/dl/go1.21.4.linux-amd64.tar.gz"

          # Download the Go binary
          wget $GO_BINARY_URL -O go.tar.gz

          # Remove any existing Go installation
          sudo rm -rf /usr/local/go

          # Extract the downloaded Go binary to /usr/local
          sudo tar -C /usr/local -xzf go.tar.gz

          # Clean up the downloaded file
          rm go.tar.gz

          # Add Go binary paths to PATH
          echo 'export PATH=$PATH:/usr/local/go/bin' >> ~/.bashrc
          echo 'export PATH=$PATH:/home/$USER/go/bin' >> ~/.bashrc

          # Apply changes to current session
          source ~/.bashrc

          echo "Go installation and PATH update complete."
      else
          echo "Go is already installed."
      fi